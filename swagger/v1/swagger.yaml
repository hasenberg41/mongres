---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/contracts":
    get:
      summary: list contracts
      tags:
      - Contracts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  people_name:
                    type: string
                  document_name:
                    type: string
                  description:
                    type: string
                  document_link:
                    type: string
                  created_at:
                    type: string
    post:
      summary: create contract
      tags:
      - Contracts
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  people_id:
                    type: integer
                  contracts_id:
                    type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                people_id:
                  type: integer
                contracts_id:
                  type: integer
              required:
              - title
              - people_id
              - contracts_id
  "/api/contracts/{id}":
    get:
      summary: get contract info
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
    delete:
      summary: delete contract
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/documents":
    get:
      summary: list documents
      tags:
      - Documents
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  link_to_data:
                    type: string
    post:
      summary: create document
      tags:
      - Documents
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  link_to_data:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                link_to_data:
                  type: string
              required:
              - name
              - description
              - link_to_data
  "/api/documents/{id}":
    delete:
      summary: delete person
      tags:
      - Documents
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/people":
    get:
      summary: list people
      tags:
      - People
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  name:
                    type: string
    post:
      summary: create person
      tags:
      - People
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required: name
  "/api/people/{id}":
    delete:
      summary: delete person
      tags:
      - People
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
servers:
- url: http://127.0.0.1:3000
  variables:
    defaultHost:
      default: http://127.0.0.1:3000
